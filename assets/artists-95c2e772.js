import{R as s,S as e,r as t,z as a,j as r,M as i,N as o,Q as u,U as l,as as n}from"./index-62a86a6d.js";import{A as m}from"./ArtistLists-67ece76d.js";import"./artist-cd2cde92.js";import"./LinkTwo-de3400c3.js";import"./Unlike-8f9bbc24.js";import"./Grid-b6f95812.js";import"./Skeleton-341b61e6.js";import"./use-houdini-3b9e128b.js";const p={class:"artists"},v={__name:"artists",setup(v){const{t:d}=s(),c=e(),j=t(c.currentRoute.value.query.keywords),f=t([]),k=t(30),y=t(1),T=t(0),g=(s,e=30,t=0,a=100)=>{n(s,e,t,a).then((s=>{T.value=s.result.artistCount,f.value=[],s.result.artists?s.result.artists.forEach((s=>{f.value.push({id:s.id,name:s.name,cover:s.img1v1Url})})):$message.error(d("general.message.acquisitionFailed")),"undefined"!=typeof $scrollToTop&&$scrollToTop()}))};return a((()=>c.currentRoute.value),(s=>{j.value=s.query.keywords,"s-artists"==s.name&&g(j.value,k.value,(y.value-1)*k.value)})),r((()=>{g(j.value)})),(s,e)=>(i(),o("div",p,[u(m,{listData:l(f)},null,8,["listData"])]))}};export{v as default};
