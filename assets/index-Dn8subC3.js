import{_ as a,E as e,m as l,B as s,d as t,F as o,e as n}from"./index-B903CxKP.js";import{a7 as i,r as c,w as u,e as r,ax as d,g as f,G as m,k as p,j as g,n as _,Y as v,T as h,aX as y,aa as b,aL as w,ac as k,P as z,J as P,i as x,L as C,az as S,ay as L,K as $,X as j,W as M,aM as R,a1 as B,ad as D,aZ as G,a0 as A,O as E,af as I,ag as N,ai as U}from"./vendor-QWMq--4w.js";const q={class:"local"},F={class:"num-item"},W={class:"num-item"},X={key:0,class:"local-list"},H={key:1,class:"local-list"},J=a({__name:"index",setup(a){const J=e(),K=i(),O=l(),T=c(!1),Y=c([]),Z=c(0),Q=c(K.currentRoute.value?.name??"local-songs"),V=c(null),aa=c([]),ea=c(!1),la=c(null),sa=async()=>{await J.getfilesDB("localSongList").then((a=>{Y.value=a}))},ta=async()=>{sa();const a=la.value?[la.value,...O.localSongPath]:O.localSongPath;if(a?.length){T.value=!0;try{const e=a.map((async a=>await electron.ipcRenderer.invoke("getDirContents",a))),l=await Promise.all(e),s=new Map;l.forEach((a=>{a.forEach((a=>{s.set(a.id,a)}))}));const t=Array.from(s.values()).sort(((a,e)=>a?.name?.localeCompare(e.name,"zh-Hans-CN",{sensitivity:"base"}))),o=Y.value?.length||0,n=t?.length||0;o<n?$message.info(`新增 ${n-o} 首歌曲`):0===o&&$message.info(`发现 ${n} 首歌曲`),await J.setfilesDB("localSongList",t.slice()),sa(),Z.value=t.reduce(((a,e)=>a+Number(e.size)),0)}catch(e){console.error("获取歌曲内容时出错：",e)}finally{T.value=!1}}},oa=async(a=!1)=>{if("number"==typeof a)O.localSongPath.splice(a,1),await ta();else{const a=await electron.ipcRenderer.invoke("selectDir");if(!a)return!1;(la.value?[la.value,...O.localSongPath]:O.localSongPath).some((e=>a.startsWith(e)))?$message.error("添加的目录是现有目录的子文件夹"):(O.localSongPath.push(a),await ta())}},na=t((a=>{const e=a?.trim();if(!e||""===e)return!0;const l=o(e,Y.value);aa.value=l}),300),ia=a=>{const e=a.replace(/^local-/,"");K.push({path:`/local/${e}`})};return u((()=>K.currentRoute.value),(a=>Q.value=a?.name??"local-songs")),r((async()=>{await(async()=>{const a=await electron.ipcRenderer.invoke("getdefaultMusicPath");la.value=a})(),await ta()})),(a,e)=>{const l=y,t=n,o=M,i=R,c=b,u=B,r=D,J=G,K=w,T=d("router-view"),sa=A,ca=E,ua=I,ra=N,da=U,fa=k;return f(),m("div",q,[p(l,{class:"title"},{default:g((()=>[z("本地歌曲")])),_:1}),p(c,{class:"num"},{default:g((()=>[P("div",F,[p(o,{size:"18"},{default:g((()=>[p(t,{icon:"music-note"})])),_:1}),p(i,{from:0,to:_(Y)?_(Y).length:0},null,8,["to"]),z(" 首歌曲 ")]),P("div",W,[p(o,{size:"18"},{default:g((()=>[p(t,{icon:"storage"})])),_:1}),z(" 占用 "),p(i,{from:0,to:Number((_(Z)/1024).toFixed(2)),precision:2},null,8,["to"]),z(" GB ")])])),_:1}),p(c,{class:"menu",justify:"space-between"},{default:g((()=>[p(c,{class:"left"},{default:g((()=>[p(u,{disabled:!_(Y)?.length,focusable:!1,type:"primary",class:"play",tag:"div",circle:"",strong:"",secondary:"",onClick:e[0]||(e[0]=a=>_(s)(_(Y)))},{icon:g((()=>[p(o,{size:"32"},{default:g((()=>[p(t,{icon:"play-arrow-rounded"})])),_:1})])),_:1},8,["disabled"]),p(u,{focusable:!1,class:"local-path",tag:"div",round:"",strong:"",secondary:"",onClick:e[1]||(e[1]=a=>ea.value=!0)},{icon:g((()=>[p(o,null,{default:g((()=>[p(t,{icon:"folder-cog"})])),_:1})])),default:g((()=>[z(" 目录管理 ")])),_:1})])),_:1}),p(c,{class:"right"},{default:g((()=>[_(Y)?.length?(f(),x(r,{key:0,value:_(V),"onUpdate:value":e[2]||(e[2]=a=>v(V)?V.value=a:null),"input-props":{autoComplete:!1},class:"search",placeholder:"模糊搜索",clearable:"",onInput:_(na)},{prefix:g((()=>[p(o,{size:"18"},{default:g((()=>[p(t,{icon:"search-rounded"})])),_:1})])),_:1},8,["value","onInput"])):C("",!0)])),_:1})])),_:1}),p(K,{value:_(Q),"onUpdate:value":[e[3]||(e[3]=a=>v(Q)?Q.value=a:null),ia],class:"tabs",type:"segment"},{default:g((()=>[p(J,{name:"local-songs"},{default:g((()=>[z(" 歌曲 ")])),_:1}),p(J,{name:"local-artists"},{default:g((()=>[z(" 歌手 ")])),_:1}),p(J,{name:"local-albums"},{default:g((()=>[z(" 专辑 ")])),_:1})])),_:1},8,["value"]),p(h,{name:"fade",mode:"out-in"},{default:g((()=>[_(V)?_(aa)?.length?(f(),m("div",H,[p(T,{songList:_(aa),onGetAllPathMusic:ta},{default:g((({Component:a})=>[(f(),x(L,null,[p(h,{name:"router",mode:"out-in"},{default:g((()=>[(f(),x(S(a)))])),_:2},1024)],1024))])),_:1},8,["songList"])])):(f(),x(sa,{key:2,description:`很抱歉，未能找到与 ${_(V)} 相关的任何歌曲`,style:{"margin-top":"60px"},size:"large"},{icon:g((()=>[p(o,null,{default:g((()=>[p(t,{icon:"search-off"})])),_:1})])),_:1},8,["description"])):(f(),m("div",X,[p(T,{songList:_(Y),onGetAllPathMusic:ta},{default:g((({Component:a})=>[(f(),x(L,null,[p(h,{name:"router",mode:"out-in"},{default:g((()=>[(f(),x(S(a)))])),_:2},1024)],1024))])),_:1},8,["songList"])]))])),_:1}),p(fa,{show:_(ea),"onUpdate:show":e[4]||(e[4]=a=>v(ea)?ea.value=a:null),"close-on-esc":!1,"mask-closable":!1,bordered:!1,preset:"card",title:"目录管理","transform-origin":"center"},{footer:g((()=>[p(c,{justify:"center"},{default:g((()=>[p(u,{class:"add-path",strong:"",secondary:"",onClick:oa},{icon:g((()=>[p(o,null,{default:g((()=>[p(t,{icon:"folder-plus"})])),_:1})])),default:g((()=>[z(" 添加文件夹 ")])),_:1})])),_:1})])),default:g((()=>[p(da,{class:"local-list",hoverable:"",clickable:"",bordered:""},{header:g((()=>[p(ca,null,{default:g((()=>[z("请选择本地音乐文件夹，将自动扫描您添加的目录，文件增删实时同步")])),_:1})])),default:g((()=>[_(la)?(f(),x(ra,{key:0},{prefix:g((()=>[p(o,{class:"folder",size:"20"},{default:g((()=>[p(t,{icon:"folder-music"})])),_:1})])),suffix:g((()=>[p(u,{quaternary:"",disabled:""},{icon:g((()=>[p(o,{class:"delete",size:"20"},{default:g((()=>[p(t,{icon:"delete"})])),_:1})])),_:1})])),default:g((()=>[p(ua,{title:_(la),description:"系统默认音乐文件夹"},null,8,["title"])])),_:1})):C("",!0),(f(!0),m($,null,j(_(O).localSongPath,((a,e)=>(f(),x(ra,{key:e},{prefix:g((()=>[p(o,{class:"folder",size:"20"},{default:g((()=>[p(t,{icon:"folder-open"})])),_:1})])),suffix:g((()=>[p(u,{quaternary:"",onClick:a=>oa(e)},{icon:g((()=>[p(o,{class:"delete",size:"20"},{default:g((()=>[p(t,{icon:"delete"})])),_:1})])),_:2},1032,["onClick"])])),default:g((()=>[p(ua,{title:a},null,8,["title"])])),_:2},1024)))),128))])),_:1})])),_:1},8,["show"])])}}},[["__scopeId","data-v-b228c0ba"]]);export{J as default};
